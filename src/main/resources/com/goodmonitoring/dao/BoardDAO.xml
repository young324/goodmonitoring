<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goodmonitoring.dao.BoardDAO">

	<!-- 게시글 전체 목록 조회 -->
	<select id="getList" resultType="com.goodmonitoring.vo.BoardVO">
		<![CDATA[
		SELECT * FROM board WHERE BOARD_NO > 0 order by BOARD_NO DESC
		]]>
	</select>

	<!-- BOARD_NO으로 하나만 조회 -->
	<select id="read" resultType="com.goodmonitoring.vo.BoardVO">
		SELECT * FROM board WHERE BOARD_NO = #{BOARD_NO}
	</select>

	<!-- 회사명으로 조회 -->
	<select id="getC_NAMElist" resultType="com.goodmonitoring.vo.BoardVO">
		SELECT * FROM board WHERE C_NAME = #{C_NAME} order by BOARD_NO DESC
	</select>
	
	<!-- 이번달 전체 모집정보 리스트 -->
	<select id="getmonthlyList" resultType="com.goodmonitoring.vo.BoardVO">
		<![CDATA[
		SELECT * FROM board WHERE ( REPORTING_DATE > LAST_DAY(NOW() - interval 1 month) AND REPORTING_DATE <= LAST_DAY(NOW()) ) order by BOARD_NO DESC 
		]]>
	</select>
	
	<!-- 이번달 특정대상의 업종별 모집정보 수 -->
	<select id="countICbyTG" resultType="com.goodmonitoring.vo.BoardVO" >
	<![CDATA[
		select INTEREST_CATEGORY,COUNT(INTEREST_CATEGORY) AS TCOUNT from (SELECT * FROM board WHERE ( REPORTING_DATE > LAST_DAY(NOW() - interval 1 month) AND REPORTING_DATE <= LAST_DAY(NOW()) ))a  where TARGET = #{TARGET} group by INTEREST_CATEGORY
	]]>
	</select>

	<!-- 이번달 대상별 모집정보 수 -->
	<select id="countTarget" resultType="int">
	<![CDATA[
		select COUNT(*) from (SELECT * FROM board WHERE ( REPORTING_DATE > LAST_DAY(NOW() - interval 1 month) AND REPORTING_DATE <= LAST_DAY(NOW()) ))a where TARGET = #{TARGET}
	]]>
	</select>
	
	<!-- 이번달 업종별 모집정보 수 -->
	<select id="countIC" resultType="int">
	<![CDATA[
		select COUNT(*) from 
		(SELECT * FROM board WHERE ( REPORTING_DATE > LAST_DAY(NOW() - interval 1 month) AND REPORTING_DATE <= LAST_DAY(NOW()) ))a 
		where INTEREST_CATEGORY = #{INTEREST_CATEGORY}
	]]>
	</select>
	
	<!--이번달 전체 모집정보 수 -->
	<select id="countboard" resultType="int">
	<![CDATA[
		select COUNT(*) from (SELECT * FROM board WHERE ( REPORTING_DATE > LAST_DAY(NOW() - interval 1 month) AND REPORTING_DATE <= LAST_DAY(NOW()) ))a 
	]]>	
	</select>

	<!-- 개인회원 가입정보의 업종과 일치하는 게시물 조회-->
	<select id="getjoinfitlist" resultType="com.goodmonitoring.vo.BoardVO">
	<![CDATA[
		 SELECT * FROM board
		WHERE INTEREST_CATEGORY IN (select INTEREST_CATEGORY from
		industrycategory where INTEREST_CATEGORY_CODE IN(SELECT
		SUBSTRING_INDEX(SUBSTRING_INDEX(t.INTEREST_CATEGORY, ',', n.n), ',',
		-1) value
		FROM user t CROSS JOIN (
		SELECT a.N + b.N * 10 + 1 n
		FROM
		(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
		UNION ALL SELECT 8 UNION ALL SELECT 9) a
		,(SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
		UNION ALL SELECT 8 UNION ALL SELECT 9) b
		ORDER BY n
		) n
		WHERE n.n <= 1 + (LENGTH(t.INTEREST_CATEGORY) - LENGTH(REPLACE(t.INTEREST_CATEGORY, ',', '')))
		AND t.USR_NO = #{USR_NO}
		ORDER BY value)) order by BOARD_NO DESC
		]]>		
	</select>
	
	<!-- 이번달 모집정보중에 가장많은 업종 -->
	<select id="getmostcate" resultType="string" > 
	<![CDATA[
		SELECT INTEREST_CATEGORY FROM (SELECT * FROM board WHERE ( REPORTING_DATE > LAST_DAY(NOW() - interval 1 month) AND REPORTING_DATE <= LAST_DAY(NOW()) ))a GROUP BY INTEREST_CATEGORY order by COUNT(*) DESC limit 1
	]]>		
	</select>
	
	<!-- 이번달 모집정보중에 가장많은 업종의 가장많은 대상 -->
	<select id="getmosttarget" resultType="string">
	<![CDATA[
		SELECT TARGET FROM (SELECT * FROM board WHERE ( REPORTING_DATE > LAST_DAY(NOW() - interval 1 month) AND REPORTING_DATE <= LAST_DAY(NOW()) ))a GROUP BY INTEREST_CATEGORY order by COUNT(*) DESC limit 1;
	]]>		
	</select>
	
	
	<!-- 업종과 일치하는 모집정보 조회 -->
	<select id="getfitcatelist" resultType="com.goodmonitoring.vo.BoardVO">
		SELECT * FROM board WHERE INTEREST_CATEGORY = #{INTEREST_CATEGORY}
	</select>

	<!-- 체크박스 검색 일단 대상,업종만 -->
	<select id="boardSearchList" resultType="com.goodmonitoring.vo.BoardVO" parameterType="com.goodmonitoring.vo.BoardVO">
		select *
		from board
		<where>
		
			<if test="targetList != null">
					TARGET in <foreach item="targetList" collection="targetList" open="(" close=")" separator="," >
						#{targetList}
					</foreach>
			</if>
			

		</where>
	</select>



	<!-- 게시글 작성 -->
	<!-- board_no은 자동증가니까 0 -->
	<insert id="insert"
		parameterType="com.goodmonitoring.vo.BoardVO" keyProperty="BOARD_NO" useGeneratedKeys="true">
		INSERT INTO board (
		BOARD_NO,
		AD_TITLE,
		C_NAME,
		INTEREST_CATEGORY,
		TARGET,
		AD_PERSONNEL,
		AD_START_DATE,
		AD_END_DATE,
		AD_ANNOUNCEMENT_DATE,
		AD_APPLY_TEXT,
		C_EMAIL,
		AD_AGE,
		AD_AREA_NAME,
		ONLINE,
		AD_TEXT,
		WORK_KEYWORD,
		WORK_START_DATE,
		WORK_END_DATE,
		WORK_TIME,
		WORK_TEXT,
		WORK_BENEFIT_KEY,
		WORK_BENEFIT_TEXT,
		WORK_TAG,
		RECOMMEND_COUNT,
		VIEW_COUNT,
		REPORTING_DATE,
		URL
		)
		VALUES (
		0,
		#{AD_TITLE},
		#{C_NAME},
		#{INTEREST_CATEGORY},
		#{TARGET},
		#{AD_PERSONNEL},
		#{AD_START_DATE},
		#{AD_END_DATE},
		#{AD_ANNOUNCEMENT_DATE},
		#{AD_APPLY_TEXT},
		#{C_EMAIL},
		#{AD_AGE},
		#{AD_AREA_NAME},
		#{ONLINE},
		#{AD_TEXT},
		#{WORK_KEYWORD},
		#{WORK_START_DATE},
		#{WORK_END_DATE},
		#{WORK_TIME},
		#{WORK_TEXT},
		#{WORK_BENEFIT_KEY},
		#{WORK_BENEFIT_TEXT},
		#{WORK_TAG},
		0,
		0,
		DATE_FORMAT(NOW(),'%Y-%m-%d'),
		#{URL}
		)
	</insert>
	
	
	<!-- 조회수 + 1 -->
	<update id="viewcount" parameterType="com.goodmonitoring.vo.BoardVO">
		UPDATE board SET VIEW_COUNT = VIEW_COUNT + 1 WHERE BOARD_NO = #{BOARD_NO}
	</update>
	
	<!-- 추천수 + 1 -->
	<update id="recommendcount" parameterType="com.goodmonitoring.vo.BoardVO">
		UPDATE board SET RECOMMEND_COUNT = RECOMMEND_COUNT + 1 WHERE BOARD_NO = #{BOARD_NO}
	</update>

	<!-- 추천수 - 1 -->
	<update id="recommendcountM" parameterType="com.goodmonitoring.vo.BoardVO">
		UPDATE board SET RECOMMEND_COUNT = RECOMMEND_COUNT - 1 WHERE BOARD_NO = #{BOARD_NO}
	</update>

	<!-- delete board where BOARD_NO = #{BOARD_NO, jdbcType=INTEGER} -->
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="java.lang.Integer">
		delete from board where
		BOARD_NO = #{BOARD_NO, jdbcType=INTEGER}
	</delete>

	<!-- 게시글 수정 -->
	<update id="update">
		UPDATE board
		SET
		AD_TITLE = #{AD_TITLE},
		C_NAME = #{C_NAME},
		INTEREST_CATEGORY =
		#{INTEREST_CATEGORY},
		TARGET = #{TARGET},
		AD_PERSONNEL =
		#{AD_PERSONNEL},
		AD_START_DATE = #{AD_START_DATE},
		AD_END_DATE =
		#{AD_END_DATE},
		AD_ANNOUNCEMENT_DATE = #{AD_ANNOUNCEMENT_DATE},
		AD_APPLY_TEXT = #{AD_APPLY_TEXT},
		C_EMAIL = #{C_EMAIL},
		FILESIZE =
		#{FILESIZE},
		FILE_LOCATION = #{FILE_LOCATION},
		FILE_NAME = #{FILE_NAME},
		AD_AGE = #{AD_AGE},
		AD_CHILD = #{AD_CHILD},
		AD_AREA_NAME =
		#{AD_AREA_NAME},
		ONLINE = #{ONLINE},
		AD_TEXT = #{AD_TEXT},
		WORK_KEYWORD =
		#{WORK_KEYWORD},
		WORK_START_DATE = #{WORK_START_DATE},
		WORK_END_DATE =
		#{WORK_END_DATE},
		WORK_TIME = #{WORK_TIME},
		WORK_TEXT = #{WORK_TEXT},
		WORK_BENEFIT_KEY = #{WORK_BENEFIT_KEY},
		WORK_BENEFIT_TEXT =
		#{WORK_BENEFIT_TEXT},
		VIEW_COUNT = #{VIEW_COUNT},
		RECOMMEND_COUNT =
		#{RECOMMEND_COUNT},
		WORK_TAG = #{WORK_TAG},
		REPORTING_DATE =
		#{REPORTING_DATE}
		WHERE BOARD_NO = #{BOARD_NO}
	</update>

	<!-- service -->



</mapper>